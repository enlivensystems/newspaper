# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  watch:
    types: [started]
#  pull_request:
#    branches: [ master ]

jobs:
  build:
    if: github.actor == github.event.repository.owner.login || github.event_name == 'push'

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#        pip install flake8 pytest
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
          echo "    [distutils]" >> ~/.pypirc
          echo "    index-servers=" >> ~/.pypirc
          echo "        pypi" >> ~/.pypirc
          echo "        testpypi" >> ~/.pypirc
          echo "" >> ~/.pypirc
          echo "    [pypi]" >> ~/.pypirc
          echo "    username: ${{ secrets.PYPI_USERNAME }}" >> ~/.pypirc
          echo "    password: ${{ secrets.PYPI_PASSWORD }}" >> ~/.pypirc
          echo "" >> ~/.pypirc
          echo "    [testpypi]" >> ~/.pypirc
          echo "    repository: https://test.pypi.org/legacy/" >> ~/.pypirc
          echo "    username: ${{ secrets.PYPI_USERNAME }}" >> ~/.pypirc
          echo "    password: ${{ secrets.PYPI_PASSWORD }}" >> ~/.pypirc
          python setup.py sdist bdist_wheel
          twine upload dist/*
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest
